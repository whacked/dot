# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term kitty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu dmenu_path | dmenu | xargs swaymsg exec --
# set $menu rofi -show drun
set $menu rofi -monitor $(swaymsg -t get_workspaces | jq -e "2-map(select(.focused == true).num)[0]") -combi-modes "window,drun,run" -modes combi -show combi -show-icons

include /etc/sway/config-vars.d/*

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg /usr/share/backgrounds/ESP_020528_1750_desktop.jpg fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

# run nixGL wdisplays for a nice GUI
output eDP-1 resolution 3840x2400 position 0,1320 scale 2
output DP-1 resolution 3840x2160 position 1920,0 transform 270
output DP-3 resolution 3840x2160 position 1920,0 transform 270

workspace 1 output eDP-1
workspace 3 output eDP-1
workspace 5 output eDP-1
workspace 7 output eDP-1
workspace 9 output eDP-1

workspace 2 output DP-1
workspace 4 output DP-1
workspace 6 output DP-1
workspace 8 output DP-1
workspace 10 output DP-1

workspace 2 output DP-3
workspace 4 output DP-3
workspace 6 output DP-3
workspace 8 output DP-3
workspace 10 output DP-3


# swaymsg output DP-1 transform scale 270
# --output eDP-1 --primary --mode 1920x1200 --pos 0x1240 --rotate normal --output $_display_name --mode 3840x2160 --pos 1920x0 --rotate left


### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
input "type:touchpad" {
    dwt enabled
    tap enabled
    natural_scroll enabled
    middle_emulation enabled
}
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

# input <identifier> repeat_delay 300
# input <identifier> repeat_rate 30
# or input <identifier>
input "type:keyboard" {
# xkb_layout us,de
    repeat_delay 200
    xkb_layout us
    xkb_options ctrl:nocaps
# xkb_variant ,nodeadkeys
}

# lock touchscreen to laptop screen only (for xps-7390)
input "1386:18670:Wacom_HID_48EE_Finger" map_to_output "eDP-1"

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#

### sov https://github.com/milgra/sov
# exec rm -f /tmp/pipes/sov.pipe && mkfifo /tmp/pipes/sov.pipe && tail -f /tmp/pipes/sov.pipe | sov
set $sovpipe_path /tmp/pipes/sov.pipe
bindsym --no-repeat $mod+o exec "echo 1 > $sovpipe_path"
bindsym --release $mod+o exec "echo 0 > $sovpipe_path"

# bindsym $mod+o exec "cat $sovpipe_path - 1 )) >> /tmp/foo"

    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10

    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+t layout toggle stacking tabbed split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+f floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent


#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    position top

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command while date +'%Y-%m-%d %H:%M:%S'; do sleep 1; done

    colors {
        statusline #ffffff
        background #323232
        inactive_workspace #32323200 #32323200 #5c5c5c
    }
}

include /etc/sway/config.d/*


bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%


bindsym $mod+z workspace back_and_forth
# Switch to prev/next workspace on current output
bindsym $mod+n workspace next_on_output
bindsym $mod+p workspace prev_on_output
# Switch to prev/next workspace on all outputs
bindsym $mod+Shift+n workspace next
bindsym $mod+Shift+p workspace prev

bindsym $mod+greater move workspace to output right
bindsym $mod+less move workspace to output left


# bindsym $mod+Escape exec swaymsg input type:keyboard xkb_switch_layout next


for_window [instance="Godot_Engine"] floating enable
for_window [instance="Godot_Editor"] floating disable
for_window [app_id="firefox" title="Picture-in-Picture"] floating enable
for_window [instance="Conky"] floating enable
for_window [instance="anki"] floating enable
for_window [app_id="thunderbird"] floating enable

# hax https://github.com/swaywm/sway/issues/5732
exec systemctl --user import-environment

# hax https://github.com/swaywm/sway/wiki#gtk-applications-take-20-seconds-to-start
exec dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK

bindsym $mod+e exec nautilus
bindsym $mod+x exec bash /home/natto/dot/toggle-conky.sh

# alt-tab behavior
# https://github.com/korreman/sway-overfocus
# lazy so I added the releases binary to /usr/bin
#bindsym $mod+h exec sway-overfocus split-lt float-lt output-ls
#bindsym $mod+j exec sway-overfocus split-dt float-dt output-ds
#bindsym $mod+k exec sway-overfocus split-ut float-ut output-us
#bindsym $mod+l exec sway-overfocus split-rt float-rt output-rs
bindsym $mod+Tab exec sway-overfocus group-rw group-dw
bindsym $mod+Shift+Tab exec sway-overfocus group-lw group-uw


# bindsym $mod+Tab         exec /nix/store/sp84mk3qbwnzz4s8gkj0pnqigaqzwm4b-swayr-0.24.0/bin/swayr switch-window
# bindsym $mod+Space       exec /nix/store/sp84mk3qbwnzz4s8gkj0pnqigaqzwm4b-swayr-0.24.0/bin/swayr switch-window
# bindsym $mod+Delete      exec /nix/store/sp84mk3qbwnzz4s8gkj0pnqigaqzwm4b-swayr-0.24.0/bin/swayr quit-window
# bindsym $mod+Tab         exec /nix/store/sp84mk3qbwnzz4s8gkj0pnqigaqzwm4b-swayr-0.24.0/bin/swayr switch-to-urgent-or-lru-window
# bindsym $mod+Next        exec /nix/store/sp84mk3qbwnzz4s8gkj0pnqigaqzwm4b-swayr-0.24.0/bin/swayr next-window all-workspaces
# bindsym $mod+Prior       exec /nix/store/sp84mk3qbwnzz4s8gkj0pnqigaqzwm4b-swayr-0.24.0/bin/swayr prev-window all-workspaces
# bindsym $mod+Shift+Space exec /nix/store/sp84mk3qbwnzz4s8gkj0pnqigaqzwm4b-swayr-0.24.0/bin/swayr switch-workspace-or-window
# bindsym $mod+c           exec /nix/store/sp84mk3qbwnzz4s8gkj0pnqigaqzwm4b-swayr-0.24.0/bin/swayr execute-swaymsg-command
# bindsym $mod+Shift+c     exec /nix/store/sp84mk3qbwnzz4s8gkj0pnqigaqzwm4b-swayr-0.24.0/bin/swayr execute-swayr-command

