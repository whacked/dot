* old gnu/linux

#+BEGIN_SRC emacs-lisp
  ;; <ubuntu-tp customizations> ;;;;;;
  ;;
  (setq user-emacs-directory "~/dot/emacs.d")
  (setq el-get-dir "~/dot/emacs.d/el-get")

  ;; ;; use anthy
  ;; ;; http://www.emacswiki.org/emacs/IBusMode
  ;; (add-to-list 'load-path "/usr/share/emacs/site-lisp/ibus")
  ;; (require 'ibus)
  ;; (add-hook 'after-init-hook 'ibus-mode-on)
  ;; (setq ibus-agent-file-name "/usr/lib/ibus-el/ibus-el-agent")

  (defun djcb-opacity-modify (&optional dec)
    "modify the transparency of the emacs frame; if DEC is t,
    decrease the transparency, otherwise increase it in 10%-steps"
    (let* ((alpha-or-nil (frame-parameter nil 'alpha)) ; nil before setting
           (oldalpha (if alpha-or-nil alpha-or-nil 100))
           (newalpha (if dec (- oldalpha 10) (+ oldalpha 10))))
      (when (and (>= newalpha frame-alpha-lower-limit) (<= newalpha 100))
        (modify-frame-parameters nil (list (cons 'alpha newalpha))))))

  ;; C-8 will increase opacity (== decrease transparency)
  ;; C-9 will decrease opacity (== increase transparency
  ;; C-0 will returns the state to normal
  (global-set-key (kbd "C-8") '(lambda()(interactive)(djcb-opacity-modify)))
  (global-set-key (kbd "C-9") '(lambda()(interactive)(djcb-opacity-modify t)))
  (global-set-key (kbd "C-0") '(lambda()(interactive)
                                 (modify-frame-parameters nil `((alpha . 100))))))

#+END_SRC

* old darwin

#+BEGIN_SRC emacs-lisp
  (defun osx-resize-current-window ()
    (interactive)
    (let* ((ncol (string-to-number (read-from-minibuffer "ncol? ")))
           (nrow (string-to-number (read-from-minibuffer "nrow? "))))
      (set-frame-size (selected-frame) ncol nrow)))
  (defun osx-move-current-window ()
    (interactive)
    (let* ((x (string-to-number (read-from-minibuffer "x? ")))
           (y (string-to-number (read-from-minibuffer "y? "))))
      (set-frame-position (selected-frame) x y)))
  ;; old window mover
  (defun win:to2 ()
    (interactive)
    (set-frame-position (selected-frame) 1440 -200)
    (set-frame-size (selected-frame) 268 78))

  ;;(setq ipython-command "/opt/local/bin/ipython")
  ;;(require 'ipython)
  ;;(setq py-python-command-args '( "-colors" "Linux"))
  ;;(require 'python-mode)
  (setenv "PYTHONPATH" "/opt/local/bin/python")

  ;; wtf default path for tex installation...
  (setenv "PATH" (concat "/usr/texbin:/usr/local/bin:" (getenv "PATH")))
#+END_SRC
