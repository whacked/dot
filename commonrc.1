# vim: set filetype=zsh :
if [ -e $HOME/dot/commonrc.local ]; then
    source $HOME/dot/commonrc.local
fi

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
export HISTSIZE=1000000
# bash only
export HISTFILESIZE=1000000
# zsh only
export SAVEHIST=1000000

export TERM="xterm-256color"

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias dir='dir --color=auto'
    alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
if $( hash gnome-open 2>/dev/null ) || $( hash xdg-open 2>/dev/null ); then
    alias open='gnome-open 2>/dev/null'
    alias pbcopy='xsel --clipboard --input'
    alias pbpaste='xsel --clipboard --output'
fi

alias p='$(fc -ln -1)'
mkcd () {
    mkdir "$1"
    cd "$1"
}

for includedir in /usr/local/bin $HOME/opt/thinkpad $HOME/opt /opt $HOME/.cabal/bin $HOME/node_modules/bin; do
    if [ -e $includedir ]; then
        export PATH=$PATH:$includedir
    fi
done

# # ref http://d.hatena.ne.jp/dame-p/20110313/1299992080
export JAVA_OPTS="-Dswank.encoding=utf-8-unix" # 日本語用？
# export JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64
_JAVA_AWT_WM_NONREPARENTING=1; export _JAVA_AWT_WM_NONREPARENTING

### export HAXE_LIBRARY_PATH=/usr/lib/haxe/std:. # the ':.' part is important
### export HAXE_HOME=/usr/lib/haxe
### export NEKOPATH=/usr/lib/neko
### PATH=$PATH:$HAXE_LIBRARY_PATH:$HAXE_HOME


RUNLOG=rr.log
function rr {
    if [ $# -eq 0 ]; then
        LASTCMD=$(fc -ln -1)
        echo 'commit last command:'
        echo $LASTCMD
        echo $LASTCMD >> $RUNLOG
    else
        echo $@ >> $RUNLOG
        $@
    fi
}

export GOPATH=~/gopath

if [ -e /usr/local/cache ]; then
    export USERCACHE=/usr/local/cache
fi

if ! type "npm" &>/dev/null; then
    :
else
    export NODE_PATH=$(npm root -g)
fi


if [ -e /opt/android-sdk-linux/tools ]; then
    export PATH=$PATH:/opt/android-sdk-linux/tools
fi

stty stop undef # unmap ctrl-s for vim-ipython

# BOOT option
# BOOT_JVM_OPTIONS="-client -XX:+TieredCompilation -XX:TieredStopAtLevel=1 -Xmx2g -XX:MaxPermSize=128m -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled -Xverify:none"
alias ssh-nosave='ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -C -X'
alias scp-nosave='scp -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -C'
alias mosh-nosave='mosh --ssh=-"o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -C -X"'
alias venv='source venv/bin/activate'

NIX_SH_PATH=$HOME/.nix-profile/etc/profile.d/nix.sh
if [ -e $NIX_SH_PATH ]; then
    unset LD_LIBRARY_PATH
    unset LD_PRELOAD
    . $NIX_SH_PATH;
    alias nsh=nix-shell
fi

eval "$(zoxide init $(basename $SHELL))"


## keychain
if type keychain &>/dev/null ; then
    # this from commonrc.1
    # keychain --eval id_rsa
    # this from original bashrc
    # one of the methods is probably obsolete
    for candidate in id_ecdsa id_rsa id_ed25519; do
        if [ -e ~/.ssh/$candidate ]; then
            keychain ~/.ssh/$candidate
            break
        fi
    done
    . ~/.keychain/`uname -n`-sh
fi


if [ -e ~/.xsh ]; then
    source ~/.xsh
fi

if [ $TILIX_ID ] || [ $VTE_VERSION ]; then
    _VTE_SH_PATH=/etc/profile.d/vte.sh
    if [ ! -e $_VTE_SH_PATH ]; then
        _VTE_SOURCE_CANDIDATE=$(find /etc/profile.d -name 'vte*.sh' | head -1)
        if [ "x$_VTE_SOURCE_CANDIDATE" != "x" ]; then
            echo "found candidate vte.sh in $_VTE_SOURCE_CANDIDATE; symlink it?"
            read confirm
            case $confirm in
                y)
                    set -x
                    sudo ln -s $_VTE_SOURCE_CANDIDATE $_VTE_SH_PATH
                    set +x
                    ;;
                *)
                    echo "doing nothing"
                    ;;
            esac
                
        fi
        unset confirm _VTE_SOURCE_CANDIDATE
    fi
    if [ -e $_VTE_SH_PATH ]; then
        source $_VTE_SH_PATH
    else
        echo "WARN: no vte.sh found in $_VTE_SH_PATH"
    fi
    unset _VTE_SH_PATH
fi

if type direnv &>/dev/null; then
    eval "$(direnv hook $(ps -p $$ -ocomm=))"
fi

export NAVI_PATH=${NAVI_PATH:+$NAVI_PATH:}$HOME/dot/navi-cheats
export VIFM=$HOME/dot/vifm
export KITTY_CONFIG_DIRECTORY=$HOME/dot/kitty
if [ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ]; then
    export SSH_AUTH_SOCK=$HOME/.ssh/ssh_auth_sock
fi

slugify() {
    # https://gist.github.com/oneohthree/f528c7ae1e701ad990e6
    sed -r 's/[^a-zA-Z0-9]+/-/g' | sed -r s/^-+\|-+$//g | tr A-Z a-z
}

tslugify() {
    echo "$(date +%F_%H%M%S_%Z)_$(cat|slugify)"
}

alias ls='lsd'

export RIPGREP_CONFIG_PATH=$HOME/dot/ripgreprc
